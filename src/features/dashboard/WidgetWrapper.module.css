.widgetWrapper {
  background-color: var(--ui-background-secondary);
  border-radius: 12px;
  border: 1px solid var(--ui-border-secondary);
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  /* The widget is not grabbable by default */
  cursor: default;
}

.widgetHeader {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 0.5rem 0.75rem 1rem;
  border-bottom: 1px solid var(--ui-border-secondary);
  flex-shrink: 0;

  /* HIDE the header by default with zero height and opacity */
  height: 0;
  padding-top: 0;
  padding-bottom: 0;
  opacity: 0;
  overflow: hidden;
  border-bottom-width: 0;
  transition: all 0.25s ease-in-out;
}

/* SHOW the header when the .is-editing class is present */
.widgetWrapper.is-editing .widgetHeader {
  height: 49px; /* A fixed height for a smooth transition */
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  opacity: 1;
  border-bottom-width: 1px;
}

/* Make the wrapper grabbable ONLY when in edit mode */
.widgetWrapper.is-editing {
  cursor: grab;
}
.widgetWrapper.is-editing:active {
  cursor: grabbing;
}

.widgetTitle {
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--ui-text-primary);
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.dragHandle {
  color: var(--ui-text-tertiary);
  cursor: grab;
}
.dragHandle:active {
  cursor: grabbing;
}

/* The remove button is part of the header and will transition with it */
.removeButton {
  padding: 0.25rem;
  background: none;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  color: var(--ui-text-tertiary);
  transition: background-color 0.2s ease;
}

.removeButton:hover {
  background-color: var(--ui-background-tertiary);
  color: var(--ui-text-primary);
}

.widgetContent {
  padding: 1rem;
  flex-grow: 1;
  overflow-y: auto;
}

